version: '3.8'

services:
  # Database
  db:
    image: postgres:16-alpine
    container_name: floreria-db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=floradmin
      - POSTGRES_PASSWORD=florpassword
      - POSTGRES_DB=floreria_cristina_dev
    ports:
      - "5432:5432"
    networks:
      - app_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U floradmin"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis
  redis:
    image: redis:7-alpine
    container_name: floreria-redis
    ports:
      - "6379:6379"
    networks:
      - app_net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Backend Django
  web:
    image: python:3.11-slim
    container_name: floreria-backend
    working_dir: /app
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    networks:
      - app_net
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - POSTGRES_DB=floreria_cristina_dev
      - POSTGRES_USER=floradmin
      - POSTGRES_PASSWORD=florpassword
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DJANGO_SETTINGS_MODULE=floreria_cristina.settings
      - DEBUG=True
    command: >
      sh -c "
      apt-get update &&
      apt-get install -y postgresql-client &&
      pip install --no-cache-dir -r requirements.txt &&
      python manage.py migrate &&
      python manage.py runserver 0.0.0.0:8000
      "

  # Frontend Next.js
  frontend:
    image: node:20-alpine
    container_name: floreria-frontend
    working_dir: /app
    volumes:
      - ./frontend:/app
      - node_modules:/app/node_modules
    ports:
      - "3000:3000"
    networks:
      - app_net
    depends_on:
      - web
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_BACKEND_URL=http://localhost:8000
    command: >
      sh -c "
      npm install &&
      npm run dev
      "

  # Nginx
  nginx:
    image: nginx:1.23-alpine
    container_name: floreria-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./media:/app/media:ro
      - ./staticfiles:/app/staticfiles:ro
    depends_on:
      - web
      - frontend
    networks:
      - app_net
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  app_net:
    driver: bridge

volumes:
  postgres_data:
  node_modules:
